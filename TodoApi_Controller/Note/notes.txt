來源︰
https://learn.microsoft.com/zh-tw/aspnet/core/tutorials/first-web-api?view=aspnetcore-7.0&tabs=visual-studio-code

-----------新增專案-----------

CMD指令︰----
(對比上一個練習︰dotnet new web -o TodoApi)
這一個練習(有Controller)︰dotnet new webapi -o TodoApi_Controller
前往︰cd .\TodoApi_Controller\
套件︰dotnet add package Microsoft.EntityFrameworkCore.InMemory
進入︰code -r ../TodoApi
開權限︰dotnet dev-certs https --trust

-----------試跑-----------

檔案生成時，WeatherForecast 是自帶的。Swagger也是。(詳看Program.cs)
我還是先用PostMan先測一下，功能都OK

在(Code)環境的左手邊，先在三角形，按個build一下(建立launch.json等)，才可以按Run。
不然按F5/Crtl+F5，都是叫我選一個設定檔的方式，然後不了了之，根本沒有跑起來。

-----------修改開始-----------

加一個Model的資料夾，新增 Todo Context 和 Item …
修改Program.cs
使用Scaffold生成Controller

(請確定到目前為止所有變更都已儲存。) //我覺得 Scaffold 就是 用模版來自動(擴充原有)生成的意思。

1. 先加入一堆 package
dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design -v 7.0.0-*
dotnet add package Microsoft.EntityFrameworkCore.Design -v 7.0.0-*
dotnet add package Microsoft.EntityFrameworkCore.SqlServer -v 7.0.0-*
dotnet tool uninstall -g dotnet-aspnet-codegenerator //<--這個可能會錯，因為從來沒有安裝過。但沒有關系。
dotnet tool install -g dotnet-aspnet-codegenerator//反正這兩句話，只是為了安裝最新版。

//tool 和 package 是不同的，感覺package是依附在專案上的補充包
//tool，是安裝在電腦上的工具，用來操作補充包裡的東東？
//以上是個人理解…

2. 這是開始做 Scaffold 了︰
dotnet-aspnet-codegenerator controller -name TodoItemsController -async -api -m TodoItem -dc TodoContext -outDir Controllers
效果︰多了TodoItemsController.cs

3. 小修Controller，使用nameof於接收「新增Post」的功能。

-----------使用Swagger，測試產生出來的Controller-----------
Ctrl+F5 去跑，能跑起來。

初始是這樣的︰http://localhost:5090/
會無法顯示(prot是隨機的，不一定一樣)

在url後面加︰
http://localhost:5090/swagger/index.html
就會有畫面

(swagger可以取代postman的意思？)

展開 POST api/TodoItems > 看範例，點「Try it out」> 輸入想新增的內容，Execute > 收到201就成功了！

接著測 Get (用id的，和不用id的) > OK
測Put(修改) > OK //我在swagger畫面上，看到︰「 server: Kestrel 」唔…記住這個名字好了，有點眼熟。
Delete 也沒問題…

WeatherForecast的那個也在！ 
// 所以Swagger是自動感應這個WebApi的專案之中，可以有什麼Controller，就產生什麼的方法來測試！
// 十分方便開發的工具。

Schema之中，是所有程式用到過的Object(沒有方法，只有屬性，像是DTO這樣的東東…)

原文︰
HTTP-repl、 Postman和 curl 通常用於測試 API 的 。 
Swagger 會使用 curl 並顯示 curl 它提交的命令。

HTTP-repl是？︰
https://learn.microsoft.com/zh-tw/aspnet/core/web-api/http-repl/?view=aspnetcore-7.0&tabs=windows
在隔壁的筆記，純用 cmd 來測 Web API 

curl是？:
https://terminalcheatsheet.com/guides/curl-rest-api
這是從Swagger的畫面上抄下來的…一直有指令上的error，我去官網看看，指令要怎下…
但結果也不成功，還不如用上面那個更方便。


-----------改路由-----------

--- ontroller 要自己命名路由的話︰
 [Route("api/ABC")]
[ApiController]
public class TodoItemsController : ControllerBase { ... }

--- controller 「的方法」要自己命名路由的話︰
[HttpGet()] <這個標簽的話，就會用 GET: api/TodoItems
[HttpGet("ALL")] <這個標簽的話，就會用GET: api/TodoItems/ALL
public async Task<ActionResult<IEnumerable<TodoItem>>> GetTodoItems(){ ... }

以上，Swagger 也會自動感應到這個改變

-----------使用DTO-----------

加 public string? Secret { get; set; } 入 TodoItem.cs
加檔案︰TodoItemDTO.cs
程式修改見Program.cs  

修改後我都測過了，沒有問題。

---------------------------
在 vs code 環境，新增一個 gitignore 的預設檔案指令︰

dotnet new gitignore

預設檔要加入，要不然會太大︰

bin/*
obj/*
.vscode/*