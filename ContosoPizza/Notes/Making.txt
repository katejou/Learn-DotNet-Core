檢查工具版本︰
dotnet --list-sdks
開新資料夾︰
mkdir ContosoPizza 
cd .\ContosoPizza\
用6.0的版本來開一個專案(雖然我已經有7.0?)，
*在這個資料夾中開出來的，專案名稱自然就會續承。
dotnet new webapi -f net6.0
(而且也會有WeatherForecast的這個範例。)
建置和測試︰(終於不用再按Ctrl+F5了)
dotnet run
去看info，找到 port，測以下，有回傳成功︰
https://localhost:7270/weatherforecast
中止︰
CTRL+C
測 httprepl :
開啟︰
httprepl https://localhost:7270
(或︰httprepl 後︰connect https://localhost:7270)
列出可用的路徑:
ls
前往︰
cd WeatherForecast
取資料︰
get
離開︰
exit

--- 開始製作Pizza !
mkdir Models + 新增 Pizza.cs
mkdir Services + 新增 PizzaService.cs
build 一下，可以確定程式沒有出錯︰
dotnet build
建置成功。
    0 個警告
    0 個錯誤
新增一個PizzaController.cs + 加一些基本的 Get Method 
跑起來看看︰
dotnet run  --------------- > (Ctrl + C)
---
httprepl https://localhost:7270
ls
cd Pizza
get
get 1 (200)
get 5 (404)
exit
---------------

新增 POST, PUT, 和 DELETE 到 controller
跑起來看看︰
dotnet run  --------------- > (Ctrl + C)
---
httprepl https://localhost:7270
ls  <--這個 ls 只看到︰ Pizza    [GET|POST]
cd Pizza
ls  <--這個 ls 才是真的 : 

.      [GET|POST]
..     []
{id}   [GET|PUT|DELETE]

新增︰
post -c "{"name":"Hawaii", "isGlutenFree":false}"
修改︰
put 3 -c  "{"id": 3, "name":"Hawaiian", "isGlutenFree":false}"
查看︰
get 3
get
刪除︰
delete 3
查看︰
get 3
get






